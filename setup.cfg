# -*- coding: utf-8 -*-
#
# This file is part of Invenio.
# Copyright (C) 2016-2024 CERN.
# Copyright (C) 2022 Graz University of Technology.
#
# Invenio is free software; you can redistribute it and/or modify it
# under the terms of the MIT License; see LICENSE file for more details.

[metadata]
name = invenio-communities
version = attr: invenio_communities.__version__
description = InvenioRDM module for the communities feature.
long_description = file: README.rst, CHANGES.rst
keywords = invenio communities
license = MIT
author = CERN
author_email = info@inveniosoftware.org
platforms = any
url = https://github.com/inveniosoftware/invenio-communities
classifiers =
    Development Status :: 5 - Production/Stable

[options]
include_package_data = True
packages = find:
python_requires = >=3.8
zip_safe = False
install_requires =
    invenio-oaiserver>=2.2.0,<3.0.0
    invenio-requests>=4.0.0,<5.0.0
    invenio-search-ui>=2.4.0,<3.0.0
    invenio-vocabularies>=3.0.0,<4.0.0
    invenio-administration>=2.0.0,<3.0.0

[options.extras_require]
tests =
    pytest-black-ng>=0.4.0
    Faker>=2.0.3
    invenio-app>=1.4.0,<2.0.0
    invenio-db[postgresql,mysql]>=1.0.14,<2.0.0
    pytest-invenio>=2.1.4,<3.0.0
    sphinx>=4.5.0
opensearch1 =
    invenio-search[opensearch1]>=2.1.0,<3.0.0
opensearch2 =
    invenio-search[opensearch2]>=2.1.0,<3.0.0

[options.entry_points]
flask.commands =
    communities = invenio_communities.cli:communities
    identity-cache = invenio_communities.cli:identity_cache
invenio_base.apps =
    invenio_communities = invenio_communities:InvenioCommunities
invenio_base.api_apps =
    invenio_communities = invenio_communities:InvenioCommunities
invenio_base.blueprints =
    invenio_communities_ext = invenio_communities.views:blueprint
    invenio_communities = invenio_communities.views:create_ui_blueprint
invenio_base.api_blueprints =
    invenio_communities_ext = invenio_communities.views:blueprint
    invenio_communities_api = invenio_communities.views:create_communities_api_blueprint
    invenio_communities_members_api = invenio_communities.views:create_members_api_bp_from_app
invenio_db.models =
    invenio_communities = invenio_communities.communities.records.models
    invenio_communities_members = invenio_communities.members.records.models
invenio_db.alembic =
    invenio_communities = invenio_communities:alembic
invenio_search.mappings =
    communities = invenio_communities.communities.records.mappings
    communitymembers = invenio_communities.members.records.mappings
invenio_jsonschemas.schemas =
    communities = invenio_communities.communities.records.jsonschemas
invenio_assets.webpack =
    invenio_communities = invenio_communities.webpack:communities
invenio_celery.tasks =
    invenio_communities_fixtures = invenio_communities.fixtures.tasks
    invenio_communities = invenio_communities.tasks
invenio_requests.entity_resolvers =
    communities = invenio_communities.communities.entity_resolvers:CommunityResolver
invenio_requests.types =
    community_invitation = invenio_communities.members.services.request:CommunityInvitation
invenio_i18n.translations =
    messages = invenio_communities
invenio_administration.views =
    invenio_communities_list = invenio_communities.administration.communities:CommunityListView
    invenio_communities_details = invenio_communities.administration.communities:CommunityDetailView
invenio_users_resources.moderation.actions =
    block = invenio_communities.requests.user_moderation.actions:on_block
    restore = invenio_communities.requests.user_moderation.actions:on_restore
    approve = invenio_communities.requests.user_moderation.actions:on_approve
invenio_base.finalize_app =
    invenio_communities = invenio_communities.ext:finalize_app
invenio_base.api_finalize_app =
    invenio_communities = invenio_communities.ext:api_finalize_app



[build_sphinx]
source-dir = docs/
build-dir = docs/_build
all_files = 1

[bdist_wheel]
universal = 1

[compile_catalog]
directory = invenio_communities/translations/
use-fuzzy = True

[extract_messages]
copyright_holder = CERN
msgid_bugs_address = info@inveniosoftware.org
mapping-file = babel.ini
output-file = invenio_communities/translations/messages.pot
add-comments = NOTE

[init_catalog]
input-file = invenio_communities/translations/messages.pot
output-dir = invenio_communities/translations/

[update_catalog]
input-file = invenio_communities/translations/messages.pot
output-dir = invenio_communities/translations/

[pydocstyle]
add_ignore = D401

[isort]
profile=black

[check-manifest]
ignore =
    *-requirements.txt

[tool:pytest]
addopts = --black --isort --pydocstyle --ignore=docs --doctest-glob="*.rst" --doctest-modules --cov=invenio_communities --cov-report=term-missing
